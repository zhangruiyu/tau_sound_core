

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
    }
}


rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

def properties = new Properties()
properties.load(new FileInputStream("local.properties"))
//user = properties.getProperty("bintray.user")
//key = properties.getProperty("bintray.apikey")

apply plugin: 'com.android.library'

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 33
        versionCode 16482
        versionName '6.4.8+2'
        //versionName project.getProperty(“libraryVersion”)

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation 'androidx.core:core:1.3.2'
    implementation 'androidx.media:media:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'

}
ext {
    PUBLISH_GROUP_ID = 'xyz.canardoux'
    PUBLISH_ARTIFACT_ID = 'tau_sound_core'
    PUBLISH_VERSION = android.defaultConfig.versionName // '0.0.2' // project.getProperty(“libraryVersion”)
}




// ==========================================================================================================================================================

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
}

artifacts {
    archives androidSourcesJar
}


group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION


task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
   classifier = 'javadoc'
   from javadoc.destinationDir
}


// =========================================================================================================================================================
